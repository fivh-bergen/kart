---
import { Map } from "../../components/Map";
import { Panel } from "../../components/Panel";
import Layout from "../../layouts/Layout.astro";
---

<Layout>
  <Map client:only="react" />
  <Panel client:only="react" />
</Layout>

<script>
  import "maplibre-gl/dist/maplibre-gl.css";
  import { $map } from "../../store/map";
  import features from "../../data/features.json";
  import maplibregl from "maplibre-gl";
  import { setFeature } from "../../store/feature";
  import { showInfoPanel } from "../../store/feature";

  $map.subscribe((map) => {
    if (map) {
      map.dragRotate.disable();

      const panel = document.getElementById("panel");

      features.elements.forEach((feature) => {
        // add marker to map
        const marker = new maplibregl.Marker()
          .setLngLat([feature.lon, feature.lat])
          .addTo(map);

        const element = marker.getElement();

        // add click event to open the info panel and pan camera if necessary
        element.addEventListener("click", () => {
          console.log("clicked");
          // Pan the camera so the marker is not behind the panel
          const mapWidth = map.getContainer().clientWidth;
          const mapHeight = map.getContainer().clientHeight;
          console.log(mapWidth);

          const panelHeight = panel?.clientHeight ?? 100;
          const panelWidth = panel?.clientWidth ?? 100;

          const markerPosition = map.project([feature.lon, feature.lat]);

          const markerBehindBottomPanel =
            markerPosition.y > mapHeight - panelHeight;
          const markerBehindSidePanel =
            markerPosition.x > mapWidth - panelWidth;
          setFeature({
            name: feature.tags.name,
            description: feature.tags.description ?? "",
            opening_hours: feature.tags.opening_hours ?? "",
          });
          showInfoPanel();
          const panelIsOnTheBottom = window.innerWidth <= 768;
          if (markerBehindBottomPanel && panelIsOnTheBottom) {
            map.panBy([0, -((mapHeight - panelHeight) / 2 - markerPosition.y)]);
          } else if (markerBehindSidePanel && !panelIsOnTheBottom) {
            map.panBy([-((mapWidth - panelWidth) / 2 - markerPosition.x), 0]);
          }
        });
        element.style.cursor = "pointer";
      });
    }
  });
</script>

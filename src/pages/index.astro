---
import { Filter } from "../components/Filter";
import { Map } from "../components/Map";
import { Panel } from "../components/Panel";
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <Map client:only="react" />
  <Panel client:only="react" />
  <Filter client:only="react" />
</Layout>

<script>
  import "maplibre-gl/dist/maplibre-gl.css";
  import { $map } from "../store/map";
  import { features } from "../overpass/features";
  import maplibregl from "maplibre-gl";
  import { setFeature } from "../store/feature";
  import { showInfoPanel } from "../store/feature";
  import { panMapToShowMarker } from "../utils/pan-map";
  import { makeMarkerElement } from "../components/marker";

  $map.subscribe((map) => {
    if (map) {
      map.dragRotate.disable();

      map.on("zoom", (e) => {
        if (e.target.getZoom() < 14) {
          document.documentElement.style.setProperty(`--display-label`, "none");
        } else {
          document.documentElement.style.setProperty(
            `--display-label`,
            "block"
          );
        }
      });

      features.features.forEach((feature) => {
        // add marker to map

        const marker = new maplibregl.Marker({
          element: makeMarkerElement(
            feature.properties["name"],
            feature.properties["fivh:kind"]
          ),
          color: "#FF7A00",
          className: `marker marker-${feature.properties["fivh:kind"]}`,
        })
          .setLngLat(feature.geometry.coordinates)
          .addTo(map);

        const element = marker.getElement();

        // add click event to open the info panel and pan camera if necessary
        element.addEventListener("click", () => {
          // Pan the camera so the marker is not behind the panel

          panMapToShowMarker(
            map,
            feature.geometry.coordinates[0],
            feature.geometry.coordinates[1]
          );
          setFeature(feature);
          showInfoPanel();
        });
        element.style.cursor = "pointer";
      });
    }
  });
</script>

<style is:global>
  :root {
    --display-repair: block;
    --display-second-hand: block;
    --display-rental: block;
  }

  .marker-flex {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.4rem;
  }

  .marker-label {
    display: var(--display-label);
  }

  .marker-repair {
    display: var(--display-repair);
  }
  .marker-second-hand {
    display: var(--display-second-hand);
  }
  .marker-rental {
    display: var(--display-rental);
  }
</style>
